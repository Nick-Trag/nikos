@use "variables" as *;

//// START: ANGULAR MATERIAL STYLES
//// Custom Theming for Angular Material
//// For more information: https://material.angular.io/guide/theming
//@use '@angular/material' as mat;
//// Plus imports for other components in your app.
//
//// Include the common styles for Angular Material. We include this here so that you only
//// have to load a single css file for Angular Material in your app.
//// Be sure that you only ever include this mixin once!
//@include mat.core();
//
//// Define the theme object.
/*
$nikos-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: mat.$azure-palette,
    tertiary: mat.$blue-palette,
  ),
  density: (
    scale: 0,
  )
));
*/
//// Include theme styles for core and each component used in your app.
//// Alternatively, you can import and @include the theme mixins for each component
//// that you are using.
//:root {
//  @include mat.all-component-themes($nikos-theme);
//}
//
//// Comment out the line below if you want to use the pre-defined typography utility classes.
//// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
//// @include mat.typography-hierarchy($nikos-theme);
//
//// Comment out the line below if you want to use the deprecated `color` inputs.
//// @include mat.color-variants-backwards-compatibility($nikos-theme);
//// END: ANGULAR MATERIAL STYLES


@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  background: rgb(13, 27, 42);
  background: linear-gradient(135deg, rgba(13, 27, 42, 1) 50%, rgba(27, 38, 59, 1) 100%);
  color: $lavender;
  @apply font-varela-round;
  min-height: 100svh;

  // Slightly lighter bg-gradient I experimented with. Keeping it in the code for if the need arises in the future
  //background: rgb(13, 27, 42);
  //background: linear-gradient(135deg, rgba(13, 27, 42, 1) 50%, rgba(27, 38, 59, 1) 75%, rgba(26, 50, 71, 1) 100%);
}

body, html {
  overflow-x: clip;
}

html {
  background-color: black;
}

.enter-transition {
  transition-property: all;
  transition-duration: 1s;
  transition-timing-function: ease-out;

  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }
}

.to-slide-in-down {
  translate: 0 -40px;
  opacity: 0;

  @media (prefers-reduced-motion: reduce) {
    translate: 0 0;
    opacity: 1;
  }
}

.to-slide-in-left {
  translate: 4%;
  opacity: 0;

  @media (prefers-reduced-motion: reduce) {
    translate: 0 0;
    opacity: 1;
  }
}

.to-fade-in {
  opacity: 0;

  @media (prefers-reduced-motion: reduce) {
    opacity: 1;
  }
}

@layer utilities {
  // Sets the height to the remaining size of the screen, without the navbar
  .h-screen-no-navbar {
    height: calc(100svh - $nav-height);
  }

  // Sets the minimum height to the remaining size of the screen, without the navbar
  .min-h-screen-no-navbar {
    min-height: calc(100svh - $nav-height);
  }
}

@layer components {
  // Reference: https://stackoverflow.com/a/42252589
  .vertical-center {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
  }
}

ul.bullet-points {
  @apply ml-3;
}

ul.bullet-points > li {
  @apply pl-1;
}

// https://stackoverflow.com/a/13354689/7400287
ul.bullet-points > li::marker {
  content: "\f386"; // f6d5 is a dragon :)
  @apply text-xs;
  font-family: FontAwesome, serif;
}

.logo-wrapper {
  width: 100px;
  min-height: 100px;
  display: flex;
  align-items: center;
}

.card {
  display: flex;
  flex-direction: column;
  flex: 1 1 0;
  width: 100%;
  border-radius: 6px;
  text-align: center;
  @apply p-4;
  background-color: $lavender;
  color: $charcoal;
  box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.75);
  @apply min-w-64;

  & > h2 {
    @apply text-xl;
    @apply font-bold;
  }

  & > h3 {
    opacity: 0.9;
  }

  & > ul {
    text-align: start;
    align-self: start;
  }
}

a.card:hover, a.card:active {
  box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.75) inset;
}

// Inverted styles for a makeshift dark mode
// References:
// https://github.com/openstreetmap/openstreetmap-website/issues/2332#issuecomment-727266980
// https://dev.to/deepakdevanand/leaflet-map-dark-theme-5ej0
.leaflet-layer, // also inverts the map tiles themselves, to be used to create a dark mode out of a light-mode map
.leaflet-control-zoom-in,
.leaflet-control-zoom-out,
.leaflet-control-attribution {
  filter: brightness(0.6) invert(1) contrast(3) hue-rotate(200deg) saturate(0.3) brightness(0.7);
}

.leaflet-container {
  background: #222222 !important;
}
