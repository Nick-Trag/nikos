@use "variables" as *;

// START: ANGULAR MATERIAL STYLES
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$nikos-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: mat.$azure-palette,
    tertiary: mat.$blue-palette,
  ),
  density: (
    scale: 0,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($nikos-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($nikos-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($nikos-theme);
// END: ANGULAR MATERIAL STYLES


@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  background-color: $bg-color;
  color: $text-color;
  @apply font-varela-round;
  min-height: 100svh;
}

body, html {
  overflow-x: clip;
}

.enter-transition {
  transition-property: all;
  transition-duration: 1s;
  transition-timing-function: ease-out;

  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }
}

.to-slide-in-down {
  translate: 0 -40px;
  opacity: 0;

  @media (prefers-reduced-motion: reduce) {
    translate: 0 0;
    opacity: 1;
  }
}

.to-slide-in-left {
  translate: 4%;
  opacity: 0;

  @media (prefers-reduced-motion: reduce) {
    translate: 0 0;
    opacity: 1;
  }
}

.to-fade-in {
  opacity: 0;

  @media (prefers-reduced-motion: reduce) {
    opacity: 1;
  }
}

@layer utilities {
  // Sets the height to the remaining size of the screen, without the navbar
  .h-screen-no-navbar {
    height: calc(100svh - $nav-height);
  }

  // Sets the minimum height to the remaining size of the screen, without the navbar
  .min-h-screen-no-navbar {
    min-height: calc(100svh - $nav-height);
  }
}

@layer components {
  // Reference: https://stackoverflow.com/a/42252589
  .vertical-center {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
  }
}
